// <auto-generated />
using System;
using LocalizationDemo.Database.Storage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LocalizationDemo.Database.Migrations
{
    [DbContext(typeof(LocalizationDemoContext))]
    [Migration("20231213094347_AddShoppingCart")]
    partial class AddShoppingCart
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("LocalizationDemo.Domain.Models.Products.LocalizedProduct", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Category");

                    b.Property<string>("CultureCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT")
                        .HasColumnName("CultureCode");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<decimal>("UsdPrice")
                        .HasColumnType("TEXT")
                        .HasColumnName("UsdPrice");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.ToView("LocalizedProducts", (string)null);
                });

            modelBuilder.Entity("LocalizationDemo.Domain.Models.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Category");

                    b.Property<decimal>("UsdPrice")
                        .HasColumnType("TEXT")
                        .HasColumnName("UsdPrice");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("LocalizationDemo.Domain.Models.Products.ShoppingCart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ShoppingCarts", (string)null);
                });

            modelBuilder.Entity("LocalizationDemo.Domain.Models.Products.Product", b =>
                {
                    b.OwnsMany("LocalizationDemo.Domain.Models.Products.Product+ProductTranslation", "Translations", b1 =>
                        {
                            b1.Property<int>("ProductId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("CultureCode")
                                .HasMaxLength(16)
                                .HasColumnType("TEXT")
                                .HasColumnName("CultureCode");

                            b1.Property<string>("Description")
                                .HasColumnType("TEXT")
                                .HasColumnName("Description");

                            b1.Property<bool>("IsDefault")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bit")
                                .HasDefaultValue(false)
                                .HasColumnName("IsDefault");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("Name");

                            b1.HasKey("ProductId", "CultureCode");

                            b1.HasIndex("ProductId", "IsDefault")
                                .IsUnique()
                                .HasFilter("[IsDefault] = 1");

                            b1.ToTable("ProductTranslations", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("LocalizationDemo.Domain.Models.Products.ShoppingCart", b =>
                {
                    b.OwnsMany("LocalizationDemo.Domain.Models.Products.ShoppingCart+ShoppingCartProduct", "Products", b1 =>
                        {
                            b1.Property<Guid>("ShoppingCartId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("ProductId")
                                .HasColumnType("INTEGER");

                            b1.HasKey("ShoppingCartId", "ProductId");

                            b1.HasIndex("ProductId");

                            b1.ToTable("ShoppingCartProducts", (string)null);

                            b1.HasOne("LocalizationDemo.Domain.Models.Products.Product", "Product")
                                .WithMany()
                                .HasForeignKey("ProductId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner("ShoppingCart")
                                .HasForeignKey("ShoppingCartId");

                            b1.Navigation("Product");

                            b1.Navigation("ShoppingCart");
                        });

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
